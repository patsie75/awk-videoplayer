#!/usr/bin/bash

clear

## set width and height
#w="$(tput cols)"
#h="$(( ($(tput lines)-1) * 2 ))"

## set fixed size
size=8

## SD aspect ratio 4:3
w=$(( 12 * size ))
h=$((  9 * size ))
## tv aspect ratio 16:9
#w=$(( 16 * size ))
#h=$((  9 * size ))
## movie aspect ratio 21:9
#w=$(( 21 * size ))
#h=$((  9 * size ))
## movie aspect ratio 12:5
#w=$(( 24 * size ))
#h=$(( 10 * size ))

## options "rgb8" (8-bit) "rgb565" (16 bit) "rgb24" (24 bit)
pix_fmt="${2:-rgb24}"

## number of decoding threads (default 2)
threads="${3:-0}"

meta=$(ffmpeg -i "$1" 2>&1 | awk 'match($0, /^  Duration: ([0-9]+:[0-9]+:[0-9]+\.[0-9]+),/, duration) { printf("%s ", duration[1]) } match($0, /Stream #[0-9]:[0-9].*: Video: .* ([0-9]+x[0-9]+) .* DAR ([0-9]+:[0-9]+).* ([0-9]+) fps/, info) { printf("%s %s %s\n", info[1], info[2], info[3]) }')

## ffmpeg options
ffopts=( -f alsa default -vf "scale=w=${w:-160}:h=${h:-90}" -vcodec rawvideo -f rawvideo -pix_fmt "$pix_fmt" )
#ffopts=( -vf "scale=w=${w:-160}:h=${h:-90}" -vcodec rawvideo -f rawvideo -pix_fmt "$pix_fmt" )

## awk options, needs `-b` or `LC_ALL=C` to parse byte-characters and not multi-byte characters
awkopts=( -b -v width="${w:-160}" -v height="${h:-90}" -v pix_fmt="${pix_fmt:-rgb24}" -v threads=${threads:-0} -v meta="${meta:-00:00:00.00 0x0 0:0 0}")

## start ffmpeg conversion and start displaying video
#ffmpeg -ss 00:30:00 -i "$1" "${ffopts[@]}" - 2>/dev/null | gawk "${awkopts[@]}" -f src/awk-videoplayer.gawk
ffmpeg -i "$1" "${ffopts[@]}" - 2>/dev/null | gawk "${awkopts[@]}" -f src/awk-videoplayer.gawk
